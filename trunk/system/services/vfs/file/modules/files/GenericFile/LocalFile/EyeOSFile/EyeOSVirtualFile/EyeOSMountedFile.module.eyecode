<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              2.0

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)

*/

class EyeOSMountedFile_FSIModule extends FSIModule {

	private static $instance = null;
	
	public static function getInstance() {
		if (is_null(self::$instance)) {
			self::$instance = new self();
			self::$instance->load();
		}
		return self::$instance;
	}
	
	public function load($params=null) {
		$this->moduleName = 'EyeOSMountedFile';
		$this->modulePath = FSI_FILEMODULES_DIR.'/GenericFile/LocalFile/EyeOSFile/EyeOSVirtualFile';
		$this->classFiles = array(
			$this->modulePath.'/'.$this->moduleName.'/'.$this->moduleName.EYE_CODE_EXTENSION
		);
	}
	
	public function unload() {
		
	}
	
	/**
	 * 
	 * @param array $urlParts
	 * @param array $params
	 * @return EyeOSMountedFile
	 */
	public function createFileFromUrlParts($urlParts, $params=null) {
		$modules = $this->getSubModules();
		foreach($modules as $module) {
			$file = $module->createFileFromUrlParts($urlParts, $params);
			if (!is_null($file)) {
				return $file;
			}
		}
		
		$eyeOSRelativeResolvedPath = AdvancedPathLib::resolvePath($urlParts['path'], EYE_ROOT, AdvancedPathLib::RESOLVEPATH_RETURN_REFDIR_RELATIVE);
		if ($eyeOSRelativeResolvedPath) {
			$realPath = AdvancedPathLib::realpath(EYE_ROOT.$eyeOSRelativeResolvedPath);
		
			//USERS FILES
			if(preg_match('`^/'.USERS_DIR.'/.{2}[0-9]{1}/(.+)/'.FILES_USER_DIR.'`', $eyeOSRelativeResolvedPath, $matches)) {
				$userMountPoints = service_mnt_getUserMountPointsList($matches[1]);
				foreach($userMountPoints as $mountPoint) {
					if (utf8_strpos($realPath, $mountPoint) === 0) {
						$mountPointData = service_mnt_getMountPointData($mountPoint);
						
						//the mountpoint must be active
						if (is_array($mountPointData) && $mountPointData['active'][0] == 'true') {
							$this->includeClassDependenciesNow();
							$params['targetRootMountPoint'] = $mountPointData['target'][0];
							$params['localRootMountPoint'] = $mountPoint;
							return new EyeOSMountedFile(AdvancedPathLib::buildURL($urlParts), $params);
						}
						//otherwise ignore the file (it will be handled by the parent class)
						else {
							return null;
						}
					}
				}
			}
			
			//GROUPS FILES
			//...
			
			//EYEOS FILES?
			//...
		}
		
		return null;
	}
}

?>