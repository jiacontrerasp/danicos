<?php

class EyeOSVirtualFile_FSIModule extends FSIModule {

	private static $instance = null;
	
	public static function getInstance() {
		if (is_null(self::$instance)) {
			self::$instance = new self();
			self::$instance->load();
		}
		return self::$instance;
	}
	
	public function load($params=null) {
		$this->moduleName = 'EyeOSVirtualFile';
		$this->modulePath = FSI_FILEMODULES_DIR.'/GenericFile/LocalFile/EyeOSFile';
		$this->classFiles = array(
			$this->modulePath.'/'.$this->moduleName.'/'.$this->moduleName.EYE_CODE_EXTENSION,
			$this->modulePath.'/'.$this->moduleName.'/EyeOSVirtualInfoFile'.EYE_CODE_EXTENSION,
		);
	}
	
	public function unload() {
		
	}
	
	/**
	 * 
	 * @param array $urlParts
	 * @param array $params
	 * @return EyeOSVirtualFile
	 */
	public function createFileFromUrlParts($urlParts, $params=null) {
		$modules = $this->getSubModules();
		foreach($modules as $module) {
			$file = $module->createFileFromUrlParts($urlParts, $params);
			if (!is_null($file)) {
				return $file;
			}
		}
		
		$eyeOSRelativeResolvedPath = AdvancedPathLib::resolvePath($urlParts['path'], EYE_ROOT, AdvancedPathLib::RESOLVEPATH_RETURN_REFDIR_RELATIVE);
		//USER FILES
		if(preg_match('`^/'.USERS_DIR.'/.{2}[0-9]{1}/.+/'.FILES_USER_DIR.'`', $eyeOSRelativeResolvedPath)) {
			$this->includeClassDependenciesNow();
			return new EyeOSVirtualFile(AdvancedPathLib::buildURL($urlParts), $params);
		}
		//2ND LEVEL TRASH FILES
		if(preg_match('`^/'.USERS_DIR.'/(.{2}[0-9]{1})/(.+)/'.TRASH_USER_DIR.'`', $eyeOSRelativeResolvedPath, $matches)
			&& AdvancedPathLib::dirname(AdvancedPathLib::resolvePath($urlParts['path'], EYE_ROOT.'/'.USERS_DIR.'/'.$matches[1].'/'.$matches[2].'/'.TRASH_USER_DIR, AdvancedPathLib::RESOLVEPATH_RETURN_REFDIR_RELATIVE)) == '/') {
			$this->includeClassDependenciesNow();
			return new EyeOSVirtualFile(AdvancedPathLib::buildURL($urlParts), $params);
		}
		//GROUP FILES
		if(preg_match('`^/'.GROUPS_DIR.'/.+/'.FILES_USER_DIR.'`', $eyeOSRelativeResolvedPath))
		{
			$this->includeClassDependenciesNow();
			return new EyeOSVirtualFile(AdvancedPathLib::buildURL($urlParts), $params);
		}
		return null;
	}
}

?>